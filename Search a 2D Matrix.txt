74. Search a 2D Matrix

方法一
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int  m = matrix.length;
        
        
        for(int i= 0;i<m;i++){
            int l=0;
            int n = matrix[i].length-1;
            
            while (l<=n){
                int mid=(l+n)/2;
                
                if(matrix[i][mid]<target){
                    l=mid+1;
                }
                if(matrix[i][mid]>target){
                    n=mid-1;
                }
                if(target == matrix[i][mid]){
					return true;
				}
            }
        }
        return false;
    }
}

方法二
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix == null || matrix.length == 0) 
            return false;
        
        int m = matrix.length;
        int n = matrix[0].length;
        int start = 0;
        int end = m*n-1;
        
        while(start <= end){
            int mid = start+(end-start)/2;
            
            if(matrix[mid /n][mid % n] == target)
                return true;
            
            if(matrix[mid / n][mid % n] < target){
                start = mid+1;
            }else if(matrix[mid /n][mid % n] > target){
                end = mid-1;
            }
        }
        return false;
    }
}